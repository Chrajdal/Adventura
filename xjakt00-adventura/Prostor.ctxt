#BlueJ class context
comment0.params=nazev\ popis\ obchod
comment0.target=Prostor(java.lang.String,\ java.lang.String,\ boolean)
comment0.text=\r\n\ Vytvo\u0159en\u00ED\ \ prostoru\ se\ zadan\u00FDm\ popisem,\ nap\u0159.\r\n\ "kuchy\u0148",\ "hala",\ "tr\u00E1vn\u00EDk\ p\u0159ed\ domem"\r\n\r\n@param\ \ nazev\ \ \ \ \ nazev\ prostoru,\ jednozna\u010Dn\u00FD\ identifik\u00E1tor,\ jedno\ slovo\ nebo\ v\u00EDceslovn\u00FD\ n\u00E1zev\ bez\ mezer.\r\n@param\ \ popis\ \ \ \ \ popis\ prostoru.\r\n@param\ \ obchod\ \ \ \ tento\ parametr\ ur\u010Duje,\ jestli\ je\ prostor\ obchod\ nebo\ ne,\ je\ to\ pot\u0159eba\ k\ rozli\u0161ov\u00E1n\u00ED\ toho,\ kde\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ m\u016F\u017Ee\ hr\u00E1t\ v\u011Bci\ br\u00E1t\ a\ kde\ kupovat\ a\ podobn\u011B.\r\n
comment1.params=vedlejsi
comment1.target=void\ setVychod(Prostor)
comment1.text=\r\n\ Definuje\ v\u00FDchod\ z\ prostoru\ (sousedn\u00ED/vedlejsi\ prostor).\ Vzhledem\ k\ tomu,\ \u017Ee\ je\ pou\u017Eit\r\n\ Set\ pro\ ulo\u017Een\u00ED\ v\u00FDchod\u016F,\ m\u016F\u017Ee\ b\u00FDt\ sousedn\u00ED\ prostor\ uveden\ pouze\ jednou\r\n\ (tj.\ nelze\ m\u00EDt\ dvoje\ dve\u0159e\ do\ stejn\u00E9\ sousedn\u00ED\ m\u00EDstnosti).\ Druh\u00E9\ zad\u00E1n\u00ED\r\n\ stejn\u00E9ho\ prostoru\ ti\u0161e\ p\u0159ep\u00ED\u0161e\ p\u0159edchoz\u00ED\ zad\u00E1n\u00ED\ (neobjev\u00ED\ se\ \u017E\u00E1dn\u00E9\ chybov\u00E9\ hl\u00E1\u0161en\u00ED).\r\n\ Lze\ zadat\ t\u00E9\u017E\ cestu\ ze\ do\ sebe\ sama.\r\n\ \r\n\ @param\ vedlejsi\ prostor,\ kter\u00FD\ sousedi\ s\ aktualnim\ prostorem.\r\n\r\n
comment10.params=
comment10.target=java.lang.String\ dlouhyPopis()
comment10.text=\r\n\ Vrac\u00ED\ "dlouh\u00FD"\ popis\ prostoru,\ kter\u00FD\ m\u016F\u017Ee\ vypadat\ n\u00E1sledovn\u011B\:\r\n\ \ \ \ \ \ Jsi\ v\ mistnosti/prostoru\ vstupni\ hala\ budovy\ VSE\ na\ Jiznim\ meste.\r\n\ \ \ \ \ \ vychody\:\ chodba,\ bufet,\ ucebna,\r\n\r\n@return\ \ \ \ Dlouh\u00FD\ popis\ prostoru.\r\n
comment11.params=
comment11.target=boolean\ getObchod()
comment11.text=\r\n\ Vrac\u00ED\ informaci\ o\ tom,\ jestli\ prostor\ je\ nebo\ nen\u00ED\ obchod.\r\n
comment12.params=vecicka
comment12.target=int\ getPocetPolozenaVec(Vec)
comment12.text=\r\n\ \ Vrac\u00ED\ po\u010Det\ kus\u016F\ ur\u010Dit\u00E9\ v\u011Bci\ polo\u017Een\u00FDch\ v\ dan\u00E9m\ prostoru.\r\n\ \ \r\n\ @param\ \ vecicka\ \ \ \ \ \ \ v\u011Bc,\ jej\u00ED\u017E\ "\u010Detnost"\ chceme\ zjistit.\r\n
comment13.params=jm
comment13.target=Vec\ vyberPolozenaVec(java.lang.String)
comment13.text=\r\n\ \ Obdoba\ metody\ 'vyberVec'.\r\n\ \ \r\n\ @param\ \ jm\ \ \ \ \ \ \ \ \ \ \ jm\u00E9no\ v\u011Bci.\r\n
comment14.params=
comment14.target=java.util.Set\ getPolozeneVeci()
comment14.text=\r\n\ \ Seznam\ v\u0161ech\ polo\u017Een\u00FDch\ v\u011Bc\u00ED\ v\ m\u00EDstnosti.\r\n\ \ \r\n\ \ @return\ \ \ \ \ \ vr\u00E1t\u00ED\ seznam\ kl\u00ED\u010D\u016F\ -\ v\u011Bc\u00ED,\ kter\u00E9\ jsou\ v\ m\u00EDstnosti\ polo\u017Eeny.\r\n
comment15.params=
comment15.target=java.lang.String\ seznamVychodu()
comment15.text=\r\n\ Vrac\u00ED\ textov\u00FD\ \u0159et\u011Bzec,\ kter\u00FD\ popisuje\ sousedn\u00ED\ v\u00FDchody)nap\u0159\u00EDklad\:\r\n\ "vychody\:\ hala\ ".\r\n\r\n@return\ \ \ \ Seznam\ n\u00E1zv\u016F\ sousedn\u00EDch\ prostor\u016F\r\n
comment16.params=
comment16.target=java.lang.String\ seznamVeciAOsob()
comment16.text=\r\n\ Vrac\u00ED\ seznam\ v\u011Bc\u00ED\ a\ osob,\ kter\u00E9\ se\ v\ m\u00EDstnosti\ nach\u00E1zej\u00ED.\r\n\ \r\n\ @return\ \ \ \ \ \ vrac\u00ED\ text,\ kter\u00FD\ obsahuje\ v\u0161echny\ v\u011Bci\ i\ osoby\ v\ m\u00EDstnosti.\r\n
comment17.params=nazevSouseda
comment17.target=Prostor\ vratSousedniProstor(java.lang.String)
comment17.text=\r\n\ Vrac\u00ED\ prostor,\ kter\u00FD\ soused\u00ED\ s\ aktu\u00E1ln\u00EDm\ prostorem\ a\ jeho\u017E\ n\u00E1zev\ je\ zad\u00E1n\r\n\ jako\ parametr.\ Pokud\ prostor\ s\ udan\u00FDm\ jm\u00E9nem\ nesoused\u00ED\ s\ aktu\u00E1ln\u00EDm\ prostorem,\r\n\ vrac\u00ED\ se\ hodnota\ null.\r\n\r\n@param\ \ nazevSouseda\ \ Jm\u00E9no\ sousedn\u00EDho\ prostoru\ (v\u00FDchodu)\r\n@return\ \ \ \ \ \ \ \ \ \ \ \ Prostor,\ kter\u00FD\ se\ nach\u00E1z\u00ED\ za\ p\u0159\u00EDslu\u0161n\u00FDm\ v\u00FDchodem,\ nebo\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ hodnota\ null,\ pokud\ prostor\ zadan\u00E9ho\ jm\u00E9na\ nen\u00ED\ sousedem.\r\n
comment18.params=
comment18.target=java.util.Collection\ getVychody()
comment18.text=\r\n\ Vrac\u00ED\ kolekci\ obsahuj\u00EDc\u00ED\ prostory,\ se\ kter\u00FDmi\ tento\ prostor\ soused\u00ED.\r\n\ Takto\ z\u00EDskan\u00FD\ seznam\ sousedn\u00EDch\ prostor\ nelze\ upravovat\ (p\u0159id\u00E1vat,\ odeb\u00EDrat\ v\u00FDchody)\r\n\ proto\u017Ee\ z\ hlediska\ spr\u00E1vn\u00E9ho\ n\u00E1vrhu\ je\ to\ pln\u011B\ z\u00E1le\u017Eitost\u00ED\ t\u0159\u00EDdy\ Prostor.\r\n\r\n@return\ \ \ \ Nemodifikovateln\u00E1\ kolekce\ prostor\u016F\ (v\u00FDchod\u016F),\ se\ kter\u00FDmi\ tento\ prostor\ soused\u00ED.\r\n
comment19.params=jm
comment19.target=boolean\ obsahujeVec(java.lang.String)
comment19.text=\r\n\ Ur\u010D\u00ED,\ jestli\ dan\u00FD\ prostor\ obsahuje\ ur\u010Ditou\ v\u011Bc.\r\n\ \r\n\ @param\ \ jm\ \ \ \ \ jm\u00E9no\ v\u011Bci,\ kterou\ v\ prostoru\ hled\u00E1me.\r\n\ @return\ \ \ \ \ \ \ \ true\ nebo\ false,\ podle\ toho,\ jestli\ byla\ v\u011Bc\ nalezena.\r\n
comment2.params=v
comment2.target=void\ setVec(Vec)
comment2.text=\r\n\ P\u0159id\u00E1v\u00E1\ v\u011Bc\ do\ prostoru.\r\n
comment20.params=jm
comment20.target=Vec\ vyberVec(java.lang.String)
comment20.text=\r\n\ Metoda,\ kter\u00E1\ se\ pou\u017E\u00EDv\u00E1\ ke\ zji\u0161\u0165ov\u00E1n\u00ED,\ jestli\ je\ dan\u00E1\ v\u011Bc\ v\ prostoru\ a\ n\u00E1sledn\u00E9mu\r\n\ p\u0159ev\u00E1d\u011Bn\u00ED\ jej\u00EDho\ n\u00E1zvu\ jako\ \u0159et\u011Bzce\ na\ konkr\u00E9tn\u00ED\ obejkt.\r\n\ \r\n\ @param\ \ jm\ \ \ \ \ jm\u00E9no\ v\u011Bci,\ kterou\ chceme\ z\ prostoru\ vyndat.\r\n\ @return\ \ \ \ \ \ \ \ v\u011Bc\ jako\ obejkt,\ pop\u0159.\ null.\r\n
comment21.params=jm
comment21.target=Osoba\ vyberOsobu(java.lang.String)
comment21.text=\r\n\ Metoda,\ kter\u00E1\ se\ pou\u017E\u00EDv\u00E1\ ke\ zji\u0161\u0165ov\u00E1n\u00ED,\ jestli\ je\ dan\u00E1\ osoba\ v\ prostoru\ a\ n\u00E1sledn\u00E9mu\r\n\ p\u0159ev\u00E1d\u011Bn\u00ED\ jej\u00EDho\ n\u00E1zvu\ jako\ \u0159et\u011Bzce\ na\ konkr\u00E9tn\u00ED\ obejkt.\r\n\ \r\n\ @param\ \ jm\ \ \ \ \ jm\u00E9no\ osoby,\ se\ kterou\ chceme\ d\u00E1le\ pracovat.\r\n\ @return\ \ \ \ \ \ \ \ v\u011Bc\ jako\ obejkt,\ pop\u0159.\ null.\r\n
comment3.params=o
comment3.target=Osoba\ setOsoba(Osoba)
comment3.text=\r\n\ P\u0159id\u00E1v\u00E1\ osobu\ do\ prostoru.\r\n
comment4.params=v
comment4.target=void\ PridejPolozeneVeci(Vec)
comment4.text=\r\n\ V\ p\u0159\u00EDpad\u011B,\ \u017Ee\ prostor\ nen\u00ED\ obchod,\ je\ mo\u017En\u00E9\ do\ n\u011Bj\ pokl\u00E1dat\ ur\u010Dit\u00E9\ v\u011Bci.\r\n\ Tyto\ v\u011Bci\ se\ pak\ nezapisuj\u00ED\ do\ klasick\u00E9ho\ seznamu,\ ale\ do\ mapy.\ Tato\ metoda\r\n\ umo\u017E\u0148uje\ p\u0159idat\ do\ mapy\ nov\u00FD\ z\u00E1znam,\ pop\u0159.\ jen\ zv\u011Bt\u0161it\ hodnotu.\r\n\ \r\n\ @param\ \ v\ \ \ \ \ \ vec,\ kter\u00E9\ se\ m\u00E1\ zv\u00FD\u0161it\ hodnota\ (po\u010Det).\r\n
comment5.params=v
comment5.target=void\ OdeberPolozeneVeci(Vec)
comment5.text=\r\n\ Tato\ metoda\ odeb\u00EDr\u00E1\ jeden\ kus\ dan\u00E9\ v\u011Bci.\r\n\ \r\n\ @param\ \ v\ \ \ \ \ vec,\ kterou\ je\ nutn\u00E9\ odebrat.\r\n
comment6.params=v
comment6.target=void\ removePolozenaVec(Vec)
comment6.text=\r\n\ V\ p\u0159\u00EDpad\u011B,\ \u017Ee\ je\ po\u010Det\ kus\u016F\ dan\u00E9\ v\u011Bci\ roven\ nule,\ je\ vol\u00E1na\r\n\ tato\ metoda,\ kter\u00E1\ danou\ v\u011Bc\ z\ prostoru\ \u00FApln\u011B\ odstran\u00ED.\r\n\ \r\n\ @param\ v\ \ \ \ \ \ vec,\ kter\u00E1\ m\u00E1\ b\u00FDt\ odtran\u011Bna.\r\n
comment7.params=o
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\r\n\ Metoda\ equals\ pro\ porovn\u00E1n\u00ED\ dvou\ prostor\u016F.\ P\u0159ekr\u00FDv\u00E1\ se\ metoda\ equals\ ze\ t\u0159\u00EDdy\ Object.\r\n\ Dva\ prostory\ jsou\ shodn\u00E9,\ pokud\ maj\u00ED\ stejn\u00FD\ n\u00E1zev.\r\n\ Tato\ metoda\ je\ d\u016Fle\u017Eit\u00E1\ z\ hlediska\ spr\u00E1vn\u00E9ho\ fungov\u00E1n\u00ED\ seznamu\ v\u00FDchod\u016F\ (Set).\r\n\ \r\n\ Bli\u017E\u0161\u00ED\ popis\ metody\ equals\ je\ u\ t\u0159\u00EDdy\ Object.\r\n\r\n@param\ \ \ o\ \ object,\ kter\u00FD\ se\ m\u00E1\ porovn\u00E1vat\ s\ aktu\u00E1ln\u00EDm\r\n@return\ \ \ \ \ hodnotu\ true,\ pokud\ m\u00E1\ zadan\u00FD\ prostor\ stejn\u00FD\ n\u00E1zev,\ jinak\ false\r\n
comment8.params=
comment8.target=int\ hashCode()
comment8.text=\r\n\ metoda\ hashCode\ vraci\ ciselny\ identifikator\ instance,\ ktery\ se\ pouziva\ pro\ optimalizaci\ ukladani\r\n\ v\ dynamickych\ datovych\ strukturach.\ Pri\ prekryti\ metody\ equals\ je\ potreba\ prekryt\ i\ metodu\ hashCode.\r\n\ Podrobny\ popis\ pravidel\ pro\ vytvareni\ metody\ hashCode\ je\ u\ metody\ hashCode\ ve\ tride\ Object\r\n
comment9.params=
comment9.target=java.lang.String\ getNazev()
comment9.text=\r\n\ Vrac\u00ED\ n\u00E1zev\ prostoru\ (byl\ zad\u00E1n\ p\u0159i\ vytv\u00E1\u0159en\u00ED\ prostoru\ jako\r\n\ parametr\ konstruktoru)\r\n\r\n@return\ \ \ \ n\u00E1zev\ prostoru.\r\n
numComments=22
